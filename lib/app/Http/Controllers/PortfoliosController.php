<?php

/**
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management.
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class PortfoliosController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation postCreatePortfolio
     *
     * Create Portfolio.
     *
     *
     * @return Http response
     */
    public function postCreatePortfolio()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['contentType'])) {
            throw new \InvalidArgumentException('Missing the required parameter $contentType when calling postCreatePortfolio');
        }
        $contentType = $input['contentType'];

        $createPortfolioRequest = $input['createPortfolioRequest'];


        return response('How about implementing postCreatePortfolio as a post method ?');
    }
    /**
     * Operation postDownloadPortfolio
     *
     * Download Portfolio.
     *
     *
     * @return Http response
     */
    public function postDownloadPortfolio()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['contentType'])) {
            throw new \InvalidArgumentException('Missing the required parameter $contentType when calling postDownloadPortfolio');
        }
        $contentType = $input['contentType'];

        $downloadPortfolioRequest = $input['downloadPortfolioRequest'];


        return response('How about implementing postDownloadPortfolio as a post method ?');
    }
    /**
     * Operation postLinkToPortfolio
     *
     * Link To Portfolio.
     *
     *
     * @return Http response
     */
    public function postLinkToPortfolio()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['contentType'])) {
            throw new \InvalidArgumentException('Missing the required parameter $contentType when calling postLinkToPortfolio');
        }
        $contentType = $input['contentType'];

        $linkToPortfolioRequest = $input['linkToPortfolioRequest'];


        return response('How about implementing postLinkToPortfolio as a post method ?');
    }
    /**
     * Operation postSetDocumentOrder
     *
     * Set Document Order.
     *
     *
     * @return Http response
     */
    public function postSetDocumentOrder()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['contentType'])) {
            throw new \InvalidArgumentException('Missing the required parameter $contentType when calling postSetDocumentOrder');
        }
        $contentType = $input['contentType'];

        $setDocumentOrderRequest = $input['setDocumentOrderRequest'];


        return response('How about implementing postSetDocumentOrder as a post method ?');
    }
    /**
     * Operation postSharePortfolio
     *
     * Share Portfolio.
     *
     *
     * @return Http response
     */
    public function postSharePortfolio()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['contentType'])) {
            throw new \InvalidArgumentException('Missing the required parameter $contentType when calling postSharePortfolio');
        }
        $contentType = $input['contentType'];

        $sharePortfolioRequest = $input['sharePortfolioRequest'];


        return response('How about implementing postSharePortfolio as a post method ?');
    }
    /**
     * Operation postSharePortfolioNoEmail
     *
     * Share Portfolio No Email.
     *
     *
     * @return Http response
     */
    public function postSharePortfolioNoEmail()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['contentType'])) {
            throw new \InvalidArgumentException('Missing the required parameter $contentType when calling postSharePortfolioNoEmail');
        }
        $contentType = $input['contentType'];

        $sharePortfolioNoEmailRequest = $input['sharePortfolioNoEmailRequest'];


        return response('How about implementing postSharePortfolioNoEmail as a post method ?');
    }
}
